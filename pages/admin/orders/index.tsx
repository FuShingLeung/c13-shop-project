import Head from 'next/head';
import Link from 'next/link';

import { dehydrate, QueryClient } from '@tanstack/react-query';
import { fetchOrders } from '@/lib/api-functions/server/orders/queries';
import { STORAGE_KEY } from '@/lib/tq/orders/settings';
import { useDelete } from '@/lib/tq/baskets/mutations';

import { Button, EditIcon } from '@/components/mui';

import Layout from '@/components/Layout';
import Heading from '@/components/Heading';
import QueryBoundaries from '@/components/QueryBoundaries';
import OrderList from '@/components/OrderList';

export default function AdminOrderList() {
  const removeMutation = useDelete();

  const removeHandler = (id: string) => {
    removeMutation.mutate(id);
  };
  return (
    <>
      <Head>
        <title>Admin Add Order</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Heading component="h2" variant="h4">
          Orders
        </Heading>
        <Button component={Link} variant="contained" href={`/admin/orders/add`}>
          Add Order
        </Button>
        <QueryBoundaries>
          <OrderList deleteHandler={removeHandler} />
        </QueryBoundaries>
      </Layout>
    </>
  );
}

export const getStaticProps = async () => {
  const orders = await fetchOrders().catch((err) =>
    console.log('Index.tsx error', err),
  );
  const queryClient = new QueryClient();

  await queryClient.setQueryData(
    [STORAGE_KEY],
    JSON.parse(JSON.stringify(orders)),
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
    revalidate: 10,
  };
};
