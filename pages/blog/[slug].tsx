import Head from 'next/head';
import Layout from '@/components/Layout';
import Heading from '@/components/Heading';
import {
  Button,
  List,
  ListItem,
  ListItemButton,
  ListItemText,
  Card,
  CardMedia,
  CardContent,
  CardActions,
} from '@/components/mui';
import Image from 'next/image';
import Markdown from 'marked-react';

import { AllPosts, SinglePost } from '@/lib/hygraph/queries';
const { HYGRAPH_ENDPOINT, HYGRAPH_TOKEN } = process.env;

import { SingleBlogPost } from '@/ts/interfaces/props.interfaces';

export default function BlogPost({ ssd }: { ssd: SingleBlogPost }) {
  console.log('ssd ahhh', ssd);
  const {
    title,
    body,
    heroImage: { url },
  } = ssd;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Heading component="h2" variant="h4">
          Single Post
        </Heading>
        <Card component="article" sx={{ width: '100%' }}>
          <CardMedia sx={{ display: 'grid', placeContent: 'center' }}>
            <Image alt={title} src={url} width="200" height="200" />
          </CardMedia>
          <CardContent>
            <Heading component="h2" variant="h3">
              {title}
            </Heading>
            <Markdown>{body}</Markdown>
          </CardContent>
        </Card>
      </Layout>
    </>
  );
}

export const getStaticPaths = async () => {
  console.log('test ahhh');
  const allPosts = await fetch(HYGRAPH_ENDPOINT, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${HYGRAPH_TOKEN}`,
    },
    body: JSON.stringify({
      query: AllPosts,
    }),
  })
    .then((res) => res.json())
    .then((res) => {
      console.log('res.data.blogposts', res.data.blogPosts);
      return res.data.blogPosts;
    })
    .catch((err) => console.log(err));
  const paths = allPosts.map((post: SingleBlogPost) => ({
    params: { slug: post.slug },
  }));

  return { paths, fallback: false };
};

export const getStaticProps = async ({
  params,
}: {
  params: SingleBlogPost;
}) => {
  console.log('test staticprops');
  console.log('params', params);
  const { blogPost: post } = await fetch(HYGRAPH_ENDPOINT, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${HYGRAPH_TOKEN}`,
    },
    body: JSON.stringify({
      query: SinglePost,
      variables: { slug: params.slug },
    }),
  })
    .then((res) => res.json())
    .then((res) => res.data)
    .catch((err) => console.log(err));

  return { props: { ssd: post } };
};
